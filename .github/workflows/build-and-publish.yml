name: Build and Publish

on:
  push:
    branches:
      - __master__ # 暂时不运行
    paths:
      - 'package.json'
      - '.github/workflows/build-and-publish.yml'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm run build

      - name: Get version from package.json
        id: get_version
        run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Get previous version tag
        id: get_previous_version
        run: |
          PREV_VERSION=$(git tag --sort=-v:refname | head -n 1 || echo "")
          echo "PREV_VERSION=$PREV_VERSION" >> $GITHUB_ENV

      - name: Get commit logs between versions
        id: get_commit_logs
        run: |
          if [ -z "${{ env.PREV_VERSION }}" ]; then
            COMMIT_LOGS=$(git log --pretty=format:'- %s' -n 10)  # 如果没有 tag，取最近 10 条
          else
            COMMIT_LOGS=$(git log ${{ env.PREV_VERSION }}..HEAD --pretty=format:'- %s')
          fi
          echo "COMMIT_LOGS<<EOF" >> $GITHUB_ENV
          echo "$COMMIT_LOGS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Check if version is already published
        id: check_npm
        run: |
          if npm show $(jq -r .name package.json)@${{ env.VERSION }} > /dev/null 2>&1; then
            echo "ALREADY_PUBLISHED=true" >> $GITHUB_ENV
          else
            echo "ALREADY_PUBLISHED=false" >> $GITHUB_ENV
          fi

      - name: Publish to npm
        if: env.ALREADY_PUBLISHED == 'false'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm config set //registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}
          npm config set registry=https://registry.npmjs.org/
          npm publish --access public

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body: "Changes since v${{ env.PREV_VERSION }}:\n\n${{ env.COMMIT_LOGS }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
